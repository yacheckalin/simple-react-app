{"version":3,"sources":["auth/auth-context-provider.js","auth/auth-form.js","auth/helpers.js","auth/auth-container.js","auth/auth-wrapper.js","App.js","index.js"],"names":["AuthContext","React","createContext","isAuthorised","useAuthContext","useContext","errorResponse","JSON","stringify","result","error","successResponse","AuthContextProvider","children","useState","setIsAuthorised","loginError","setLoginError","Provider","value","login","email","password","Promise","resolve","then","response","res","parse","logout","resp","resetLoginError","FormContainer","styled","div","FormHeader","FormBody","FormRow","FormItem","FormFooter","AuthForm","setEmail","setPassword","emailValid","setEmailValid","passwordValid","setPasswordValid","handleEmail","e","target","el","document","createElement","type","setAttribute","validity","valid","isEmailValid","className","onChange","id","pass","match","handlePassword","onClick","preventDefault","handleLogin","AuthContainer","context","Authorized","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.51f8c82e.chunk.js","sourcesContent":["import React, { useState, useContext } from \"react\";\n\nconst context = {\n  isAuthorised: false,\n};\n\nexport const AuthContext = React.createContext(context);\nexport const useAuthContext = () => useContext(AuthContext);\n\nconst errorResponse = JSON.stringify({\n  result: \"error\",\n  error:\n    \"\\u041d\\u0435\\u0432\\u0435\\u0440\\u043d\\u044b\\u0435 \\u043f\\u0430\\u0440\\u0430\\u043c\\u0435\\u0442\\u0440\\u044b\",\n});\nconst successResponse = JSON.stringify({ result: \"ok\" });\n\nconst AuthContextProvider = ({ children }) => {\n  const [isAuthorised, setIsAuthorised] = useState();\n  const [loginError, setLoginError] = useState(\"\");\n\n  const login = ({ email: login, password }) => {\n    //TODO: change for axios request\n    const response = Promise.resolve(errorResponse);\n\n    response.then((response) => {\n      const res = JSON.parse(response);\n      if (res.error) {\n        setLoginError(res.error);\n        setIsAuthorised(false);\n      } else {\n        setIsAuthorised(true);\n      }\n    });\n  };\n\n  const logout = ({ email, password }) => {\n    //TODO: change for axios request\n    const response = Promise.resolve(successResponse);\n\n    response.then((resp) => {\n      const res = JSON.parse(resp);\n\n      if (!res.error) {\n        setLoginError(\"\");\n        setIsAuthorised(false);\n      }\n    });\n\n    setIsAuthorised(false);\n    setLoginError(\"\");\n  };\n\n  const resetLoginError = () => {\n    setLoginError(\"\");\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isAuthorised,\n        setIsAuthorised,\n        login,\n        logout,\n        loginError,\n        resetLoginError,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContextProvider;\n","import React, { useState } from \"react\";\nimport { isEmailValid, isPasswordValid } from \"./helpers\";\nimport { useAuthContext } from \"./auth-context-provider\";\n\nimport styled from \"styled-components\";\n\nconst FormContainer = styled.div`\n  margin: 0 auto;\n  width: 480px;\n  font-family: \"Open Sans\", sans-serif;\n`;\n\nconst FormHeader = styled.div`\n  height: 60px;\n  background-color: #1a237e;\n  color: #f0f0f6;\n  text-align: center;\n  border-top-left-radius: 20px;\n  border-top-right-radius: 20px;\n\n  span {\n    display: block;\n    box-sizing: border-box;\n    font-size: 20pt;\n    font-family: \"Open Sans\", sans-serif;\n    padding: 15px;\n  }\n`;\n\nconst FormBody = styled.div`\n  height: 250px;\n  background-color: #fff;\n  position: relative;\n  padding-top: 50px;\n`;\n\nconst FormRow = styled.div`\n  position: sticky;\n  display: flex;\n  height: 100px;\n  justify-content: space-around;\n  margin-bottom: 20px;\n`;\n\nconst FormItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  box-sizing: content-box;\n\n  p:last-child {\n    color: #d32f2f;\n  }\n  .form-input {\n    display: block;\n    border: 2px solid #1a237e;\n    border-radius: 6px;\n    height: 40px;\n    padding: 10px;\n    width: 245px;\n    font-size: 18px;\n    color: #a0a0a0;\n    :focus {\n      outline: 0;\n    }\n  }\n  .error {\n    border-color: #d32f2f;\n  }\n`;\n\nconst FormFooter = styled.div`\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n  background-color: #fff;\n  height: 136px;\n  padding-top: 30px;\n\n  button {\n    width: 165px;\n    height: 40px;\n    text-align: center;\n    color: #f0f0f6;\n    border-radius: 20px;\n    background-color: #1a237e;\n\n    font-size: 18px;\n    display: flex;\n    justify-content: center;\n    flex-direction: row;\n    margin: 0 auto;\n    box-sizing: content-box;\n    span {\n      margin-left: 10px;\n    }\n  }\n  p {\n    margin: 0px;\n    display: flex;\n    justify-content: center;\n    padding: 20px;\n    color: #d32f2f;\n    text-align: center;\n  }\n`;\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [emailValid, setEmailValid] = useState(true);\n  const [passwordValid, setPasswordValid] = useState(true);\n\n  const { login, loginError, resetLoginError } = useAuthContext();\n\n  const handleEmail = (e) => {\n    const { value } = e.target;\n\n    setEmail(value);\n    setEmailValid(isEmailValid(value));\n    resetLoginError();\n  };\n\n  const handlePassword = (e) => {\n    const { value } = e.target;\n\n    setPassword(value);\n    setPasswordValid(isPasswordValid(value));\n    resetLoginError();\n  };\n\n  const handleLogin = (e) => {\n    login({ email, password });\n    e.preventDefault();\n  };\n  return (\n    <FormContainer>\n      <FormHeader>\n        <span>Вход в личный кабинет</span>\n      </FormHeader>\n\n      <FormBody>\n        <FormRow>\n          <FormItem>\n            <p> Логин </p>\n            <input\n              className={`form-input ${!emailValid && `error`}`}\n              type=\"text\"\n              value={email}\n              onChange={(e) => handleEmail(e)}\n              id=\"email\"\n            />\n            <p id=\"email-error\">{!emailValid && \"Неверный email\"}&nbsp;</p>\n          </FormItem>\n        </FormRow>\n\n        <FormRow>\n          <FormItem>\n            <p> Пароль </p>\n            <input\n              className={`form-input ${!passwordValid && `error`}`}\n              type=\"password\"\n              value={password}\n              onChange={(e) => handlePassword(e)}\n              id=\"password\"\n            />\n            <p id=\"password-error\">\n              {!passwordValid && \"Неверный пароль\"}&nbsp;\n            </p>\n          </FormItem>\n        </FormRow>\n      </FormBody>\n\n      <FormFooter>\n        <button onClick={(e) => handleLogin(e)}>\n          Вход <span>&#8594;</span>\n        </button>\n        <p id=\"form-error\">{loginError}</p>\n      </FormFooter>\n    </FormContainer>\n  );\n};\n\nexport default AuthForm;\n","export const isEmailValid = (email) => {\n  const el = document.createElement(\"input\");\n  el.type = \"email\";\n  el.setAttribute(\"value\", email);\n  return el.validity.valid;\n};\n\nexport const isPasswordValid = (pass) => {\n  if (pass.match(/\\d/is)) return false;\n  if (!pass.match(/([a-zA-Z_]{7,})+?/is)) return false;\n  return true;\n};\n","import React from \"react\";\nimport AuthForm from \"./auth-form\";\nimport \"./../styles.css\";\nimport { useAuthContext } from \"./auth-context-provider\";\n\nconst AuthContainer = () => {\n  const context = useAuthContext();\n\n  return (\n    <>\n      {!context?.isAuthorised && (\n        <div className=\"grid-container\">\n          <AuthForm />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default AuthContainer;\n","import React from \"react\";\nimport { useAuthContext } from \"./auth-context-provider\";\n\nconst Authorized = ({ children }) => {\n  const context = useAuthContext();\n  return context.isAuthorised ? <>{children} </> : null;\n};\n\nexport default Authorized;\n","import React from \"react\";\nimport AuthContainer from \"./auth\";\nimport AuthContextProvider from \"./auth/auth-context-provider\";\nimport Authorized from \"./auth/auth-wrapper\";\n\nconst App = () => {\n  return (\n    <AuthContextProvider>\n      <AuthContainer />\n      <Authorized>Some authorized content here</Authorized>\n    </AuthContextProvider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}